
==================== FINAL INTERFACE ====================
2019-05-20 21:39:05.799802078 UTC

interface hgit-0.1.0.0-Byck4folewAHwC9vUGKEOl:HGit.Core.Diff 8063
  interface hash: 681f0110d0c8b74ecffcdbee6b93223b
  ABI hash: 60a8e7f35e20c164ad244cb585ec2c4a
  export-list hash: 2042995149559db6e914af3bd987834f
  orphan hash: 5560cb3bacb5cbbb32c9e889fd6cb0d2
  flag hash: 17fb0d903dad4c00b70c8b491cebf459
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  HGit.Core.Diff.diffMerkleDirs
  HGit.Core.Diff.Diff{HGit.Core.Diff.DirReplacedWithFile HGit.Core.Diff.EntityCreated HGit.Core.Diff.EntityDeleted HGit.Core.Diff.FileModified HGit.Core.Diff.FileReplacedWithDir}
module dependencies: HGit.Core.Types
package dependencies: aeson-1.4.2.0 array-0.5.3.0
                      attoparsec-0.13.2.2 base-4.12.0.0 base-compat-0.10.5
                      base-orphans-0.8 base64-bytestring-1.0.0.2 bifunctors-5.5.3
                      binary-0.8.6.0 bytestring-0.10.8.2 comonad-5.0.4 containers-0.6.0.1
                      deepseq-1.4.4.0 deriving-compat-0.5.4 distributive-0.6
                      dlist-0.8.0.5 exceptions-0.10.0 free-5.1 ghc-boot-th-8.6.3
                      ghc-prim-0.5.3 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.2 merkle-schemes-0.1.0.0 mtl-2.2.2
                      pretty-1.1.3.6 primitive-0.6.4.0 profunctors-5.3 random-1.1
                      recursion-schemes-5.1.1 scientific-0.3.6.2 semigroupoids-5.3.2
                      stm-2.5.0.0 tagged-0.8.6 template-haskell-2.14.0.0 text-1.2.3.1
                      th-abstraction-0.2.10.0 time-1.8.0.2 time-locale-compat-0.1.1.5
                      transformers-0.5.5.0 transformers-base-0.4.5.2
                      transformers-compat-0.6.2 unordered-containers-0.2.9.0
                      uuid-types-1.0.3 vector-0.12.0.2
orphans: attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.2:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         stm-2.5.0.0:Control.Monad.STM
         transformers-0.5.5.0:Control.Monad.Trans.Error
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: aeson-1.4.2.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped
                         containers-0.6.0.1:Data.Graph
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.5:Data.DList free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.3:GHC.LanguageExtensions.Type
                         hgit-0.1.0.0-Byck4folewAHwC9vUGKEOl:HGit.Core.Types
                         merkle-schemes-0.1.0.0:Merkle.Types.IPFS
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         recursion-schemes-5.1.1:Data.Functor.Base
                         recursion-schemes-5.1.1:Data.Functor.Foldable
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.10.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:Control.Monad 7bd27be8172a0ce3a579caee3ae14f88
import  -/  base-4.12.0.0:Data.Functor 22aac80fdb6c7b7f60b4aaab86afee64
import  -/  base-4.12.0.0:Data.Functor.Compose 4bf09f5e4b84ca3ec0f8df4c7c6b7c3e
import  -/  base-4.12.0.0:Data.Tuple c92a835d04b6c075a7031d4e28e53c71
import  -/  base-4.12.0.0:GHC.Base cc906f98291a1b830546e99a96674547
import  -/  base-4.12.0.0:GHC.Show 4e438f26d903388cc6c2c5d64ed01b98
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
import  -/  containers-0.6.0.1:Data.Map.Internal 7258cbfb7d1b897678a42b6739fc4dac
import  -/  containers-0.6.0.1:Data.Map.Merge.Strict a4288993f9afd6cb5e39f5d7ad1169d3
import  -/  containers-0.6.0.1:Data.Map.Strict c9c15d36149113668379264c6ca4bcc8
import  -/  containers-0.6.0.1:Data.Map.Strict.Internal eb77e50df3bac5c0b0daef45a98deea7
import  -/  ghc-prim-0.5.3:GHC.Classes e0d9c979f6368701f34fa421754d2cce
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  HGit.Core.Types 79e907bf15f7ab56c84aba27eb2d3ddb
  exports: 94322bdc5d9ddb9502c2eba522a4c99c
  Dir be80b6a731843e8b4df725ad76728847
  DirEntity 5304b1897769932112c46b8713d25d3e
  FileEntity ce47e7413baee27a5b39b9e4daa861fa
  FileTreeEntity ae33a7ec835849f6fc910a468589c69e
  LazyMerkle 2eae4a9c8cff88e7992df1544c72d667
  LazyMerkleDir 4e8974f2593cf87a0bec6bcfaa775b0c
  PartialFilePath 6644ba3cdf878cce4766b194f8a2c20b
  dirEntries be80b6a731843e8b4df725ad76728847
import  -/  merkle-schemes-0.1.0.0:Merkle.Functors eb8956b10d3f8e04ccb8a7a2b5cc8ff0
b6de59a458c90fd2c0b87cf1d4bafb57
  $fEqDiff :: GHC.Classes.Eq HGit.Core.Diff.Diff
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ HGit.Core.Diff.Diff
                  HGit.Core.Diff.$fEqDiff_$c==
                  HGit.Core.Diff.$fEqDiff_$c/= -}
b6de59a458c90fd2c0b87cf1d4bafb57
  $fEqDiff_$c/= ::
    HGit.Core.Diff.Diff -> HGit.Core.Diff.Diff -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: HGit.Core.Diff.Diff) (y :: HGit.Core.Diff.Diff) ->
                 case x of wild {
                   HGit.Core.Diff.FileModified
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        HGit.Core.Diff.FileModified -> GHC.Types.False }
                   HGit.Core.Diff.FileReplacedWithDir
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        HGit.Core.Diff.FileReplacedWithDir -> GHC.Types.False }
                   HGit.Core.Diff.DirReplacedWithFile
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        HGit.Core.Diff.DirReplacedWithFile -> GHC.Types.False }
                   HGit.Core.Diff.EntityDeleted
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        HGit.Core.Diff.EntityDeleted -> GHC.Types.False }
                   HGit.Core.Diff.EntityCreated
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        HGit.Core.Diff.EntityCreated -> GHC.Types.False } }) -}
b6de59a458c90fd2c0b87cf1d4bafb57
  $fEqDiff_$c== ::
    HGit.Core.Diff.Diff -> HGit.Core.Diff.Diff -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: HGit.Core.Diff.Diff)
                   (ds1 :: HGit.Core.Diff.Diff) ->
                 case ds of wild {
                   HGit.Core.Diff.FileModified
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        HGit.Core.Diff.FileModified -> GHC.Types.True }
                   HGit.Core.Diff.FileReplacedWithDir
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        HGit.Core.Diff.FileReplacedWithDir -> GHC.Types.True }
                   HGit.Core.Diff.DirReplacedWithFile
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        HGit.Core.Diff.DirReplacedWithFile -> GHC.Types.True }
                   HGit.Core.Diff.EntityDeleted
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        HGit.Core.Diff.EntityDeleted -> GHC.Types.True }
                   HGit.Core.Diff.EntityCreated
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        HGit.Core.Diff.EntityCreated -> GHC.Types.True } }) -}
b6de59a458c90fd2c0b87cf1d4bafb57
  $fOrdDiff :: GHC.Classes.Ord HGit.Core.Diff.Diff
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ HGit.Core.Diff.Diff
                  HGit.Core.Diff.$fEqDiff
                  HGit.Core.Diff.$fOrdDiff_$ccompare
                  HGit.Core.Diff.$fOrdDiff_$c<
                  HGit.Core.Diff.$fOrdDiff_$c<=
                  HGit.Core.Diff.$fOrdDiff_$c>
                  HGit.Core.Diff.$fOrdDiff_$c>=
                  HGit.Core.Diff.$fOrdDiff_$cmax
                  HGit.Core.Diff.$fOrdDiff_$cmin -}
b6de59a458c90fd2c0b87cf1d4bafb57
  $fOrdDiff_$c< ::
    HGit.Core.Diff.Diff -> HGit.Core.Diff.Diff -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: HGit.Core.Diff.Diff)
                   (b :: HGit.Core.Diff.Diff) ->
                 case a of wild {
                   HGit.Core.Diff.FileModified
                   -> case b of wild1 {
                        HGit.Core.Diff.FileModified -> GHC.Types.False
                        HGit.Core.Diff.FileReplacedWithDir -> GHC.Types.True
                        HGit.Core.Diff.DirReplacedWithFile -> GHC.Types.True
                        HGit.Core.Diff.EntityDeleted -> GHC.Types.True
                        HGit.Core.Diff.EntityCreated -> GHC.Types.True }
                   HGit.Core.Diff.FileReplacedWithDir
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        HGit.Core.Diff.DirReplacedWithFile -> GHC.Types.True
                        HGit.Core.Diff.EntityDeleted -> GHC.Types.True
                        HGit.Core.Diff.EntityCreated -> GHC.Types.True }
                   HGit.Core.Diff.DirReplacedWithFile
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        HGit.Core.Diff.EntityDeleted -> GHC.Types.True
                        HGit.Core.Diff.EntityCreated -> GHC.Types.True }
                   HGit.Core.Diff.EntityDeleted
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        HGit.Core.Diff.EntityCreated -> GHC.Types.True }
                   HGit.Core.Diff.EntityCreated
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
b6de59a458c90fd2c0b87cf1d4bafb57
  $fOrdDiff_$c<= ::
    HGit.Core.Diff.Diff -> HGit.Core.Diff.Diff -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: HGit.Core.Diff.Diff)
                   (b :: HGit.Core.Diff.Diff) ->
                 case b of wild {
                   HGit.Core.Diff.FileModified
                   -> case a of wild1 {
                        HGit.Core.Diff.FileModified -> GHC.Types.True
                        HGit.Core.Diff.FileReplacedWithDir -> GHC.Types.False
                        HGit.Core.Diff.DirReplacedWithFile -> GHC.Types.False
                        HGit.Core.Diff.EntityDeleted -> GHC.Types.False
                        HGit.Core.Diff.EntityCreated -> GHC.Types.False }
                   HGit.Core.Diff.FileReplacedWithDir
                   -> case a of wild1 {
                        DEFAULT -> GHC.Types.True
                        HGit.Core.Diff.DirReplacedWithFile -> GHC.Types.False
                        HGit.Core.Diff.EntityDeleted -> GHC.Types.False
                        HGit.Core.Diff.EntityCreated -> GHC.Types.False }
                   HGit.Core.Diff.DirReplacedWithFile
                   -> case a of wild1 {
                        DEFAULT -> GHC.Types.True
                        HGit.Core.Diff.EntityDeleted -> GHC.Types.False
                        HGit.Core.Diff.EntityCreated -> GHC.Types.False }
                   HGit.Core.Diff.EntityDeleted
                   -> case a of wild1 {
                        DEFAULT -> GHC.Types.True
                        HGit.Core.Diff.EntityCreated -> GHC.Types.False }
                   HGit.Core.Diff.EntityCreated
                   -> case a of wild1 { DEFAULT -> GHC.Types.True } }) -}
b6de59a458c90fd2c0b87cf1d4bafb57
  $fOrdDiff_$c> ::
    HGit.Core.Diff.Diff -> HGit.Core.Diff.Diff -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: HGit.Core.Diff.Diff) (b :: HGit.Core.Diff.Diff) ->
                 HGit.Core.Diff.$fOrdDiff_$c< b a) -}
b6de59a458c90fd2c0b87cf1d4bafb57
  $fOrdDiff_$c>= ::
    HGit.Core.Diff.Diff -> HGit.Core.Diff.Diff -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: HGit.Core.Diff.Diff)
                   (b :: HGit.Core.Diff.Diff) ->
                 case a of wild {
                   HGit.Core.Diff.FileModified
                   -> case b of wild1 {
                        HGit.Core.Diff.FileModified -> GHC.Types.True
                        HGit.Core.Diff.FileReplacedWithDir -> GHC.Types.False
                        HGit.Core.Diff.DirReplacedWithFile -> GHC.Types.False
                        HGit.Core.Diff.EntityDeleted -> GHC.Types.False
                        HGit.Core.Diff.EntityCreated -> GHC.Types.False }
                   HGit.Core.Diff.FileReplacedWithDir
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        HGit.Core.Diff.DirReplacedWithFile -> GHC.Types.False
                        HGit.Core.Diff.EntityDeleted -> GHC.Types.False
                        HGit.Core.Diff.EntityCreated -> GHC.Types.False }
                   HGit.Core.Diff.DirReplacedWithFile
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        HGit.Core.Diff.EntityDeleted -> GHC.Types.False
                        HGit.Core.Diff.EntityCreated -> GHC.Types.False }
                   HGit.Core.Diff.EntityDeleted
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        HGit.Core.Diff.EntityCreated -> GHC.Types.False }
                   HGit.Core.Diff.EntityCreated
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
b6de59a458c90fd2c0b87cf1d4bafb57
  $fOrdDiff_$ccompare ::
    HGit.Core.Diff.Diff -> HGit.Core.Diff.Diff -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: HGit.Core.Diff.Diff)
                   (b :: HGit.Core.Diff.Diff) ->
                 case a of wild {
                   HGit.Core.Diff.FileModified
                   -> case b of wild1 {
                        HGit.Core.Diff.FileModified -> GHC.Types.EQ
                        HGit.Core.Diff.FileReplacedWithDir -> GHC.Types.LT
                        HGit.Core.Diff.DirReplacedWithFile -> GHC.Types.LT
                        HGit.Core.Diff.EntityDeleted -> GHC.Types.LT
                        HGit.Core.Diff.EntityCreated -> GHC.Types.LT }
                   HGit.Core.Diff.FileReplacedWithDir
                   -> case b of wild1 {
                        HGit.Core.Diff.FileModified -> GHC.Types.GT
                        HGit.Core.Diff.FileReplacedWithDir -> GHC.Types.EQ
                        HGit.Core.Diff.DirReplacedWithFile -> GHC.Types.LT
                        HGit.Core.Diff.EntityDeleted -> GHC.Types.LT
                        HGit.Core.Diff.EntityCreated -> GHC.Types.LT }
                   HGit.Core.Diff.DirReplacedWithFile
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        HGit.Core.Diff.DirReplacedWithFile -> GHC.Types.EQ
                        HGit.Core.Diff.EntityDeleted -> GHC.Types.LT
                        HGit.Core.Diff.EntityCreated -> GHC.Types.LT }
                   HGit.Core.Diff.EntityDeleted
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        HGit.Core.Diff.EntityDeleted -> GHC.Types.EQ
                        HGit.Core.Diff.EntityCreated -> GHC.Types.LT }
                   HGit.Core.Diff.EntityCreated
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        HGit.Core.Diff.EntityCreated -> GHC.Types.EQ } }) -}
b6de59a458c90fd2c0b87cf1d4bafb57
  $fOrdDiff_$cmax ::
    HGit.Core.Diff.Diff -> HGit.Core.Diff.Diff -> HGit.Core.Diff.Diff
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: HGit.Core.Diff.Diff)
                   (y :: HGit.Core.Diff.Diff) ->
                 case y of wild {
                   HGit.Core.Diff.FileModified -> x
                   HGit.Core.Diff.FileReplacedWithDir
                   -> case x of wild1 {
                        DEFAULT -> HGit.Core.Diff.FileReplacedWithDir
                        HGit.Core.Diff.DirReplacedWithFile
                        -> HGit.Core.Diff.DirReplacedWithFile
                        HGit.Core.Diff.EntityDeleted -> HGit.Core.Diff.EntityDeleted
                        HGit.Core.Diff.EntityCreated -> HGit.Core.Diff.EntityCreated }
                   HGit.Core.Diff.DirReplacedWithFile
                   -> case x of wild1 {
                        DEFAULT -> HGit.Core.Diff.DirReplacedWithFile
                        HGit.Core.Diff.EntityDeleted -> HGit.Core.Diff.EntityDeleted
                        HGit.Core.Diff.EntityCreated -> HGit.Core.Diff.EntityCreated }
                   HGit.Core.Diff.EntityDeleted
                   -> case x of wild1 {
                        DEFAULT -> HGit.Core.Diff.EntityDeleted
                        HGit.Core.Diff.EntityCreated -> HGit.Core.Diff.EntityCreated }
                   HGit.Core.Diff.EntityCreated
                   -> case x of wild1 { DEFAULT ->
                      HGit.Core.Diff.EntityCreated } }) -}
b6de59a458c90fd2c0b87cf1d4bafb57
  $fOrdDiff_$cmin ::
    HGit.Core.Diff.Diff -> HGit.Core.Diff.Diff -> HGit.Core.Diff.Diff
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: HGit.Core.Diff.Diff)
                   (y :: HGit.Core.Diff.Diff) ->
                 case y of wild {
                   HGit.Core.Diff.FileModified
                   -> case x of wild1 { DEFAULT -> HGit.Core.Diff.FileModified }
                   HGit.Core.Diff.FileReplacedWithDir
                   -> case x of wild1 {
                        DEFAULT -> wild1
                        HGit.Core.Diff.DirReplacedWithFile
                        -> HGit.Core.Diff.FileReplacedWithDir
                        HGit.Core.Diff.EntityDeleted -> HGit.Core.Diff.FileReplacedWithDir
                        HGit.Core.Diff.EntityCreated
                        -> HGit.Core.Diff.FileReplacedWithDir }
                   HGit.Core.Diff.DirReplacedWithFile
                   -> case x of wild1 {
                        DEFAULT -> wild1
                        HGit.Core.Diff.EntityDeleted -> HGit.Core.Diff.DirReplacedWithFile
                        HGit.Core.Diff.EntityCreated
                        -> HGit.Core.Diff.DirReplacedWithFile }
                   HGit.Core.Diff.EntityDeleted
                   -> case x of wild1 {
                        DEFAULT -> wild1
                        HGit.Core.Diff.EntityCreated -> HGit.Core.Diff.EntityDeleted }
                   HGit.Core.Diff.EntityCreated -> x }) -}
b6de59a458c90fd2c0b87cf1d4bafb57
  $fShowDiff :: GHC.Show.Show HGit.Core.Diff.Diff
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ HGit.Core.Diff.Diff
                  HGit.Core.Diff.$fShowDiff_$cshowsPrec
                  HGit.Core.Diff.$fShowDiff_$cshow
                  HGit.Core.Diff.$fShowDiff_$cshowList -}
09910de96eb7f2c73eeb2d32d2802563
  $fShowDiff1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   HGit.Core.Diff.$fShowDiff2) -}
2a0ef39e710a2a80fe90f475d6c8f066
  $fShowDiff10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FileModified"#) -}
5f2c45f2ff0975d7b92674d31bc8b719
  $fShowDiff2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EntityCreated"#) -}
17a568256dffbdd16b8a2685e214c0c0
  $fShowDiff3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   HGit.Core.Diff.$fShowDiff4) -}
be1a65e47804cf4a2f95e03c71f13fb1
  $fShowDiff4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EntityDeleted"#) -}
b073282062052caa0814f339add06043
  $fShowDiff5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   HGit.Core.Diff.$fShowDiff6) -}
27659f71b4da05ff773ff987a11fd2cd
  $fShowDiff6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DirReplacedWithFile"#) -}
714a7d3eab73630d8b04e2122f79241c
  $fShowDiff7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   HGit.Core.Diff.$fShowDiff8) -}
b3c77febd7179b87ca5b19ae9a4f6bfa
  $fShowDiff8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FileReplacedWithDir"#) -}
2e54f0708b2abc66e246c3dc4f5b632b
  $fShowDiff9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   HGit.Core.Diff.$fShowDiff10) -}
b6de59a458c90fd2c0b87cf1d4bafb57
  $fShowDiff_$cshow :: HGit.Core.Diff.Diff -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: HGit.Core.Diff.Diff) ->
                 case x of wild {
                   HGit.Core.Diff.FileModified -> HGit.Core.Diff.$fShowDiff9
                   HGit.Core.Diff.FileReplacedWithDir -> HGit.Core.Diff.$fShowDiff7
                   HGit.Core.Diff.DirReplacedWithFile -> HGit.Core.Diff.$fShowDiff5
                   HGit.Core.Diff.EntityDeleted -> HGit.Core.Diff.$fShowDiff3
                   HGit.Core.Diff.EntityCreated -> HGit.Core.Diff.$fShowDiff1 }) -}
b6de59a458c90fd2c0b87cf1d4bafb57
  $fShowDiff_$cshowList :: [HGit.Core.Diff.Diff] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [HGit.Core.Diff.Diff]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ HGit.Core.Diff.Diff
                   HGit.Core.Diff.$w$cshowsPrec
                   ls
                   s) -}
b6de59a458c90fd2c0b87cf1d4bafb57
  $fShowDiff_$cshowsPrec ::
    GHC.Types.Int -> HGit.Core.Diff.Diff -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: HGit.Core.Diff.Diff)
                   (w2 :: GHC.Base.String) ->
                 HGit.Core.Diff.$w$cshowsPrec w1 w2) -}
7908337d311a677e77d2540d93d34180
  $sfromList ::
    [(HGit.Core.Types.PartialFilePath, a)]
    -> Data.Map.Internal.Map HGit.Core.Types.PartialFilePath a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(HGit.Core.Types.PartialFilePath, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ HGit.Core.Types.PartialFilePath @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case x of x1 { DEFAULT ->
                           case kx of dt { DEFAULT ->
                           Data.Map.Internal.Bin
                             @ HGit.Core.Types.PartialFilePath
                             @ a
                             1#
                             dt
                             x1
                             (Data.Map.Internal.Tip @ HGit.Core.Types.PartialFilePath @ a)
                             (Data.Map.Internal.Tip @ HGit.Core.Types.PartialFilePath @ a) } }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case GHC.Classes.$fOrd[]_$s$ccompare1 kx ky of wild4 {
                             DEFAULT
                             -> case x of x0 { DEFAULT ->
                                case kx of dt { DEFAULT ->
                                HGit.Core.Diff.$sfromList1
                                  @ a
                                  wild2
                                  (Data.Map.Internal.Bin
                                     @ HGit.Core.Types.PartialFilePath
                                     @ a
                                     1#
                                     dt
                                     x0
                                     (Data.Map.Internal.Tip @ HGit.Core.Types.PartialFilePath @ a)
                                     (Data.Map.Internal.Tip
                                        @ HGit.Core.Types.PartialFilePath
                                        @ a)) } }
                             GHC.Types.LT
                             -> case x of x0 { DEFAULT ->
                                case kx of dt { DEFAULT ->
                                HGit.Core.Diff.$wpoly_go8
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ HGit.Core.Types.PartialFilePath
                                     @ a
                                     1#
                                     dt
                                     x0
                                     (Data.Map.Internal.Tip @ HGit.Core.Types.PartialFilePath @ a)
                                     (Data.Map.Internal.Tip @ HGit.Core.Types.PartialFilePath @ a))
                                  wild2 } } } } } } }) -}
af7c09df1d69f850abbfc1fa49746e8a
  $sfromList1 ::
    [(HGit.Core.Types.PartialFilePath, a)]
    -> Data.Map.Internal.Map HGit.Core.Types.PartialFilePath a
    -> Data.Map.Internal.Map HGit.Core.Types.PartialFilePath a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
8ca9fbdaa5b5a43efc2908aa96e445ff
  $sinsert_$sgo8 ::
    HGit.Core.Types.PartialFilePath
    -> a1
    -> Data.Map.Internal.Map HGit.Core.Types.PartialFilePath a1
    -> Data.Map.Internal.Map HGit.Core.Types.PartialFilePath a1
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
54d82da86fc21989a7a6adb83a22cc9e
  $tc'DirReplacedWithFile :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9047792437821599491##
                   2633922324270636398##
                   HGit.Core.Diff.$trModule
                   HGit.Core.Diff.$tc'DirReplacedWithFile2
                   0#
                   HGit.Core.Diff.$tc'DirReplacedWithFile1) -}
d212a578a06986875118384a862327ce
  $tc'DirReplacedWithFile1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
1a885f522ebebf7a02849c5ae305132c
  $tc'DirReplacedWithFile2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   HGit.Core.Diff.$tc'DirReplacedWithFile3) -}
3db40ee2d43ed93f66780d6388fd61bc
  $tc'DirReplacedWithFile3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DirReplacedWithFile"#) -}
aac72241af1d9b351f4a458580125877
  $tc'EntityCreated :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6930833958699832111##
                   11374564488790884278##
                   HGit.Core.Diff.$trModule
                   HGit.Core.Diff.$tc'EntityCreated1
                   0#
                   HGit.Core.Diff.$tc'DirReplacedWithFile1) -}
5eaf0529d3fb1c6272049894f2550eaf
  $tc'EntityCreated1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS HGit.Core.Diff.$tc'EntityCreated2) -}
5b0cacb0e39bc754dded01a8691b482f
  $tc'EntityCreated2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'EntityCreated"#) -}
6324d431ae95bc739c5d605d3973849c
  $tc'EntityDeleted :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12390027886988153561##
                   10751937738937651399##
                   HGit.Core.Diff.$trModule
                   HGit.Core.Diff.$tc'EntityDeleted1
                   0#
                   HGit.Core.Diff.$tc'DirReplacedWithFile1) -}
78335849d07edf715309caaed05e50b8
  $tc'EntityDeleted1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS HGit.Core.Diff.$tc'EntityDeleted2) -}
1163f0f1111e7f4d865aa0b137453315
  $tc'EntityDeleted2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'EntityDeleted"#) -}
c0c84525a331d6ceaf8931f52ef807e4
  $tc'FileModified :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17946782402429431083##
                   5852976063537936428##
                   HGit.Core.Diff.$trModule
                   HGit.Core.Diff.$tc'FileModified1
                   0#
                   HGit.Core.Diff.$tc'DirReplacedWithFile1) -}
3d669298b293efa162e5fc1224bf8ab7
  $tc'FileModified1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS HGit.Core.Diff.$tc'FileModified2) -}
80d3fdb53ca6fa23f1fe084c04f95c56
  $tc'FileModified2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FileModified"#) -}
90210c43afe5c8fa6d9c7d4b83a016f4
  $tc'FileReplacedWithDir :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   773865643053481266##
                   3584283665586599590##
                   HGit.Core.Diff.$trModule
                   HGit.Core.Diff.$tc'FileReplacedWithDir1
                   0#
                   HGit.Core.Diff.$tc'DirReplacedWithFile1) -}
52845bcd418f706fc9bd1e5c8f6440dd
  $tc'FileReplacedWithDir1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   HGit.Core.Diff.$tc'FileReplacedWithDir2) -}
e0cf81db0c7395d9d8fc656a5157e6d0
  $tc'FileReplacedWithDir2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FileReplacedWithDir"#) -}
cbd3374a7b3314bc79a0d545cbde71b7
  $tcDiff :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11058336537258181243##
                   7371906182998313767##
                   HGit.Core.Diff.$trModule
                   HGit.Core.Diff.$tcDiff1
                   0#
                   GHC.Types.krep$*) -}
a3d2447b79fc04298cc82ff22cb73c95
  $tcDiff1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS HGit.Core.Diff.$tcDiff2) -}
a15e0c884d701e4d17b80aabab3ab9cc
  $tcDiff2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Diff"#) -}
7181edcddd23568cb78186f6cbf770fe
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   HGit.Core.Diff.$trModule3
                   HGit.Core.Diff.$trModule1) -}
d9e1a8aaa7cda63ac88a6adcc9e96f76
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS HGit.Core.Diff.$trModule2) -}
db1ea0b8e0029a038ec15fff02eacc3e
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HGit.Core.Diff"#) -}
87077128a16895730f3276345105d6ab
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS HGit.Core.Diff.$trModule4) -}
b1f90fa4a4712152926275a0de8e1d7f
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("hgit-0.1.0.0-Byck4folewAHwC9vUGKEOl"#) -}
b6de59a458c90fd2c0b87cf1d4bafb57
  $w$cshowsPrec ::
    HGit.Core.Diff.Diff -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (w :: HGit.Core.Diff.Diff) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   HGit.Core.Diff.FileModified
                   -> GHC.Base.++ @ GHC.Types.Char HGit.Core.Diff.$fShowDiff9 w1
                   HGit.Core.Diff.FileReplacedWithDir
                   -> GHC.Base.++ @ GHC.Types.Char HGit.Core.Diff.$fShowDiff7 w1
                   HGit.Core.Diff.DirReplacedWithFile
                   -> GHC.Base.++ @ GHC.Types.Char HGit.Core.Diff.$fShowDiff5 w1
                   HGit.Core.Diff.EntityDeleted
                   -> GHC.Base.++ @ GHC.Types.Char HGit.Core.Diff.$fShowDiff3 w1
                   HGit.Core.Diff.EntityCreated
                   -> GHC.Base.++ @ GHC.Types.Char HGit.Core.Diff.$fShowDiff1 w1 }) -}
bf69bd127978cbdf9e2361e10db7efba
  $w$sgo13 ::
    HGit.Core.Types.PartialFilePath
    -> Data.Map.Internal.Map HGit.Core.Types.PartialFilePath a1
    -> (# Data.Map.Internal.Map HGit.Core.Types.PartialFilePath a1,
          GHC.Maybe.Maybe a1,
          Data.Map.Internal.Map HGit.Core.Types.PartialFilePath a1 #)
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [2] -}
d02dc4a99d8b0590c4012c7089dd534e
  $wdiffMerkleDirs ::
    (GHC.Base.Monad m, GHC.Classes.Eq x) =>
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Functor.Compose.Compose
         m
         (HGit.Core.Types.Dir x)
         (Data.Functor.Foldable.Fix
            (Data.Functor.Compose.Compose
               (HGit.Core.Types.HashAnnotated (HGit.Core.Types.Dir x))
               (Data.Functor.Compose.Compose m (HGit.Core.Types.Dir x))))
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Functor.Compose.Compose
         m
         (HGit.Core.Types.Dir x)
         (Data.Functor.Foldable.Fix
            (Data.Functor.Compose.Compose
               (HGit.Core.Types.HashAnnotated (HGit.Core.Types.Dir x))
               (Data.Functor.Compose.Compose m (HGit.Core.Types.Dir x))))
    -> m [([HGit.Core.Types.PartialFilePath], HGit.Core.Diff.Diff)]
  {- Arity: 10,
     Strictness: <L,U(U(U(C(C1(U)),A),C(U),C(C1(U)),C(C1(C1(U))),A,A),C(C1(U)),A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U><L,U><L,U><L,U><S,U><L,U>,
     Inline: [2] -}
78580bfb28363f080bd429bc6644c698
  $wpoly_go8 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map HGit.Core.Types.PartialFilePath a
    -> [(HGit.Core.Types.PartialFilePath, a)]
    -> Data.Map.Internal.Map HGit.Core.Types.PartialFilePath a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [2] -}
b6de59a458c90fd2c0b87cf1d4bafb57
  data Diff
    = FileModified
    | FileReplacedWithDir
    | DirReplacedWithFile
    | EntityDeleted
    | EntityCreated
b696988de3ef6a2245f0e958195ba764
  diffMerkleDirs ::
    (GHC.Base.Monad m, GHC.Classes.Eq x) =>
    HGit.Core.Types.LazyMerkle (HGit.Core.Types.Dir x) m
    -> HGit.Core.Types.LazyMerkle (HGit.Core.Types.Dir x) m
    -> m [([HGit.Core.Types.PartialFilePath], HGit.Core.Diff.Diff)]
  {- Arity: 4,
     Strictness: <L,U(U(U(C(C1(U)),A),C(U),C(C1(U)),C(C1(C1(U))),A,A),C(C1(U)),A,A,A)><L,U(C(C1(U)),A)><S(S(SSS)L),1*U(1*U(U,U,U),U)><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ @ m :: Type -> Type
                   @ x
                   (w :: GHC.Base.Monad m)
                   (w1 :: GHC.Classes.Eq x)
                   (w2 :: HGit.Core.Types.LazyMerkle (HGit.Core.Types.Dir x) m)
                   (w3 :: HGit.Core.Types.LazyMerkle (HGit.Core.Types.Dir x) m) ->
                 case w2
                        `cast`
                      (Data.Functor.Foldable.N:Fix[0]
                           <Data.Functor.Compose.Compose
                              (HGit.Core.Types.HashAnnotated (HGit.Core.Types.Dir x))
                              (Data.Functor.Compose.Compose
                                 m (HGit.Core.Types.Dir x))>_N ; Data.Functor.Compose.N:Compose[0]
                                                                     <Type>_N
                                                                     <Type>_N
                                                                     <HGit.Core.Types.HashAnnotated
                                                                        (HGit.Core.Types.Dir x)>_R
                                                                     <Data.Functor.Compose.Compose
                                                                        m (HGit.Core.Types.Dir x)>_N
                                                                     <Data.Functor.Foldable.Fix
                                                                        (Data.Functor.Compose.Compose
                                                                           (HGit.Core.Types.HashAnnotated
                                                                              (HGit.Core.Types.Dir
                                                                                 x))
                                                                           (Data.Functor.Compose.Compose
                                                                              m
                                                                              (HGit.Core.Types.Dir
                                                                                 x)))>_N) of ww { (,) ww1 ww2 ->
                 case ww1
                        `cast`
                      (Data.Functor.Const.N:Const[0]
                           <Type -> Type>_N
                           <Merkle.Types.IPFS.RawIPFSHash>_R
                           <HGit.Core.Types.Dir
                              x>_P ; Merkle.Types.IPFS.N:RawIPFSHash[0]) of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w3
                        `cast`
                      (Data.Functor.Foldable.N:Fix[0]
                           <Data.Functor.Compose.Compose
                              (HGit.Core.Types.HashAnnotated (HGit.Core.Types.Dir x))
                              (Data.Functor.Compose.Compose
                                 m (HGit.Core.Types.Dir x))>_N ; Data.Functor.Compose.N:Compose[0]
                                                                     <Type>_N
                                                                     <Type>_N
                                                                     <HGit.Core.Types.HashAnnotated
                                                                        (HGit.Core.Types.Dir x)>_R
                                                                     <Data.Functor.Compose.Compose
                                                                        m (HGit.Core.Types.Dir x)>_N
                                                                     <Data.Functor.Foldable.Fix
                                                                        (Data.Functor.Compose.Compose
                                                                           (HGit.Core.Types.HashAnnotated
                                                                              (HGit.Core.Types.Dir
                                                                                 x))
                                                                           (Data.Functor.Compose.Compose
                                                                              m
                                                                              (HGit.Core.Types.Dir
                                                                                 x)))>_N) of ww7 { (,) ww8 ww9 ->
                 case ww8
                        `cast`
                      (Data.Functor.Const.N:Const[0]
                           <Type -> Type>_N
                           <Merkle.Types.IPFS.RawIPFSHash>_R
                           <HGit.Core.Types.Dir
                              x>_P ; Merkle.Types.IPFS.N:RawIPFSHash[0]) of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 HGit.Core.Diff.$wdiffMerkleDirs
                   @ m
                   @ x
                   w
                   w1
                   ww4
                   ww5
                   ww6
                   ww2
                   ww11
                   ww12
                   ww13
                   ww9 } } } }) -}
instance GHC.Classes.Eq [HGit.Core.Diff.Diff]
  = HGit.Core.Diff.$fEqDiff
instance GHC.Classes.Ord [HGit.Core.Diff.Diff]
  = HGit.Core.Diff.$fOrdDiff
instance GHC.Show.Show [HGit.Core.Diff.Diff]
  = HGit.Core.Diff.$fShowDiff
"SPEC/HGit.Core.Diff fromList @ PartialFilePath _" [orphan] forall @ a
                                                                   ($dOrd :: GHC.Classes.Ord
                                                                               HGit.Core.Types.PartialFilePath)
  Data.Map.Strict.Internal.fromList @ [GHC.Types.Char] @ a $dOrd
  = HGit.Core.Diff.$sfromList @ a
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

